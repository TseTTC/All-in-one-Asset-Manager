{"version":3,"sources":["Components/overview.js","App.js","portfolio.js","routes.js","index.js"],"names":["Overview","props","assets","numUSD","Intl","NumberFormat","style","currency","map","asset","symbol","toUpperCase","format","price","quantity","cost","value","profit","id","App","handleChangeSymbol","e","setState","target","state","handleChangeQuantity","handleChangeCost","onSubmitAsset","preventDefault","share","fetch","process","mode","then","response","json","result","Object","keys","length","console","log","sum","concat","uniqid","this","onSubmit","htmlFor","onChange","type","Component","Profile","Routes","exact","path","component","Portfolio","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19a2f261.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Overview = (props) => {\r\n  const { assets } = props;\r\n  var numUSD = new Intl.NumberFormat(\"en-US\",\r\n          {\r\n            style: \"currency\",\r\n            currency: \"USD\"\r\n          })\r\n\r\n  return (\r\n      assets.map((asset) => {\r\n        return (\r\n        <tbody key={asset.id}>\r\n          <tr>\r\n              <td>{asset.symbol.toUpperCase()}</td>\r\n              <td>{numUSD.format(asset.price)}</td>\r\n              <td>{asset.quantity}</td>\r\n              <td>{numUSD.format(asset.cost)}</td>\r\n              <td>{numUSD.format(asset.value)}</td>\r\n              <td>{numUSD.format(asset.profit)}</td>\r\n          </tr>\r\n        </tbody>\r\n        )\r\n      })\r\n  );\r\n};\r\n\r\nexport default Overview;","//App.js\n\nimport React, { Component} from \"react\";\nimport uniqid from \"uniqid\";\nimport Overview from \"./Components/overview\";\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      asset: {\n        symbol: 0,\n        price: 0,\n        quantity: 0,\n        cost: 0,\n        value: 0,\n        profit: 0,\n        id: uniqid()\n      },\n      assets: [],\n      sum: {\n        cost:0,\n        value:0,\n        profit:0,\n      }\n      }\n    }\n    //this.getPrices = this.getPrices.bind(this);\n  \n\n \n    \n\n\n\n  handleChangeSymbol = (e) => {\n    this.setState({\n      asset: {\n        symbol: e.target.value,\n        price: this.state.asset.price,\n        quantity: this.state.asset.quantity,\n        cost: this.state.asset.cost,\n        value: this.state.asset.value,\n        profit: this.state.asset.profit,\n        id:this.state.asset.id,\n      }\n    });\n    \n  };\n\n  handleChangeQuantity = (e) => {\n    this.setState({\n      asset: {\n        symbol: this.state.asset.symbol,\n        price: this.state.asset.price,\n        quantity: e.target.value,\n        cost: this.state.asset.cost,\n        value: this.state.asset.value,\n        profit: this.state.asset.profit,\n        id:this.state.asset.id,\n      }\n    });\n  };\n  handleChangeCost = (e) => {\n    this.setState({\n      asset: {\n        symbol: this.state.asset.symbol,\n        price: this.state.asset.price,\n        quantity: this.state.asset.quantity,\n        value: this.state.asset.value,\n        profit: this.state.asset.profit,\n        cost: e.target.value,\n        id:this.state.asset.id,\n      }\n    });\n  };\n\n\n  onSubmitAsset = (e) => {\n      e.preventDefault();\n      \n      var share = this.state.asset.symbol;\n      fetch( `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${share}&apikey=${process.env.REACT_APP_ALPHA_API_KEY}`, {mode: 'cors'})\n      .then(response => response.json())\n      .then(\n        (result) => {\n          if (Object.keys(result[\"Global Quote\"]).length === 0 ) {\n            console.log(\"No such symbol\")\n          }\n          else {\n          console.log(result[\"Global Quote\"][\"05. price\"])\n          var price = result[\"Global Quote\"][\"05. price\"]\n          \n          this.setState({\n            asset: {\n              symbol: this.state.asset.symbol,\n              price: price,\n              quantity: this.state.asset.quantity,\n              cost: this.state.asset.cost * this.state.asset.quantity,\n              value: price * this.state.asset.quantity,\n              profit: this.state.asset.quantity * (price - this.state.asset.cost),\n              id:this.state.asset.id,\n            },\n          })\n          this.setState({\n            sum: {\n              cost: this.state.sum.cost + this.state.asset.cost,\n              value: this.state.sum.value + this.state.asset.value,\n              profit: this.state.sum.profit + this.state.asset.profit\n            },\n          })\n          this.setState({\n            assets: this.state.assets.concat(this.state.asset),\n            asset: {\n              symbol: 0,\n              price: 0,\n              quantity: 0,\n              cost: 0,\n              value: 0,\n              profit: 0,\n              id:uniqid(),\n            }\n          });\n        }\n        }\n      )\n   \n    \n  };\n\n\n  render() {\n    const { asset, assets } = this.state;\n    var numUSD = new Intl.NumberFormat(\"en-US\",\n          {\n            style: \"currency\",\n            currency: \"USD\"\n          })\n    \n    return (\n      <div>\n        <form onSubmit={this.onSubmitAsset}>\n          <label htmlFor=\"assetInput\">Enter symbol:</label>\n          <input \n            onChange={this.handleChangeSymbol} \n            value = {asset.symbol} \n            type=\"text\" \n            id=\"assetInput\"\n            /><br/>\n          <label htmlFor=\"quantityInput\">Enter quantity:</label>\n          <input \n            onChange={this.handleChangeQuantity} \n            value = {asset.quantity} \n            type=\"number\" \n            id=\"quantityInput\"\n            /><br/>\n          <label htmlFor=\"costInput\">Enter purchase price:</label>\n          <input \n            onChange={this.handleChangeCost} \n            value = {asset.cost} \n            type=\"number\" \n            id=\"costInput\"\n            /><br/>\n          <button type=\"submit\"  id=\"submitButton\">\n            Add Asset\n          </button>\n        </form>\n        <table id=\"portfolio\">\n          <thead>\n            <tr>\n              <th>Stock</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total Cost</th>\n              <th>Total Value</th>\n              <th>Profit</th>\n            </tr>\n          </thead>\n          <tfoot>\n            <tr>\n              <th></th>\n              <th></th>\n              <th></th>\n              <th>{numUSD.format(this.state.sum.cost)}</th>\n              <th>{numUSD.format(this.state.sum.value)}</th>\n              <th>{numUSD.format(this.state.sum.profit)}</th>\n            </tr>\n          </tfoot>\n      <Overview assets={assets} />\n    </table>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const Profile = () => {\r\n    return (\r\n      <div>\r\n        <h1>Hello from Profile</h1>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Profile;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport Portfolio from \"./portfolio\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path =\"/\" component={App} />\r\n                <Route exact path =\"/portfolio\" component={Portfolio} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from \"./routes\";\nimport \"./App.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}